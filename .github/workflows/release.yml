name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: 1.0.0)'
        required: true
      changelog:
        description: '更新内容 (如不填写，将自动获取commit消息)'
        required: false
      prerelease:
        description: '是否为预发布版本'
        type: boolean
        default: false
      draft:
        description: '是否为草稿版本'
        type: boolean
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        
      - name: 设置版本号
        run: |
          # 更新manifest.json中的版本号
          sed -i 's/"version": "[0-9]\+\.[0-9]\+\(\.[0-9]\+\)*"/"version": "${{ github.event.inputs.version }}"/' src/manifest.json
        
      - name: 创建ZIP包
        run: |
          mkdir -p dist
          cd src
          zip -r ../dist/language-switcher-${{ github.event.inputs.version }}.zip *
          cd ..
        
      - name: 获取更新日志
        id: get_changelog
        run: |
          if [ -z "${{ github.event.inputs.changelog }}" ]; then
            echo "未提供自定义更新内容，正在获取commit消息..."
            # 获取最近的标签
            latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
            
            if [ -z "$latest_tag" ]; then
              # 如果没有找到标签，获取所有commit
              echo "没有找到之前的release，获取所有commit信息"
              changelog=$(git log --pretty=format:"- %s" | sed 's/\\n/\n/g')
            else
              # 获取从最近标签到现在的所有commit消息
              echo "从标签 $latest_tag 开始获取commit信息"
              changelog=$(git log $latest_tag..HEAD --pretty=format:"- %s" | sed 's/\\n/\n/g')
            fi
            
            # 如果没有commit信息，添加默认消息
            if [ -z "$changelog" ]; then
              changelog="- 未找到新的commit信息"
            fi
          else
            # 使用提供的自定义更新内容
            changelog="${{ github.event.inputs.changelog }}"
            # 确保每行前面有 '- ' 前缀
            changelog=$(echo "$changelog" | sed 's/^\([^-]\)/- \1/g')
          fi
          
          # 将更新日志保存到输出变量，确保多行内容正确保存
          changelog="${changelog//'%'/'%25'}"
          changelog="${changelog//$'\n'/'%0A'}"
          changelog="${changelog//$'\r'/'%0D'}"
          echo "::set-output name=changelog::$changelog"
      
      - name: 创建Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Version ${{ github.event.inputs.version }}
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}
          body: |
            Language Switcher Chrome扩展 v${{ github.event.inputs.version }}
            
            ## 更新内容
            
            ${{ steps.get_changelog.outputs.changelog }}
            
            ## 安装方法
            
            1. 下载ZIP文件
            2. 解压到本地文件夹
            3. 在Chrome中打开 chrome://extensions/
            4. 开启开发者模式
            5. 点击「加载已解压的扩展程序」按钮
            6. 选择解压后的文件夹

      - name: 上传Release资产
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/language-switcher-${{ github.event.inputs.version }}.zip
          asset_name: language-switcher-${{ github.event.inputs.version }}.zip
          asset_content_type: application/zip
